{"message":"Something failed during startup.","stack":"Error: Something failed during startup.\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:29:7)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:32:44.656Z"}
{"message":"Something failed miserably!","stack":"Error: Something failed miserably!\n    at Object.<anonymous> (/Users/moshfeghhamedani/Desktop/node-course/vidly/index.js:34:26)\n    at Module._compile (module.js:635:30)\n    at Object.Module._extensions..js (module.js:646:10)\n    at Module.load (module.js:554:32)\n    at tryModuleLoad (module.js:497:12)\n    at Function.Module._load (module.js:489:3)\n    at Function.Module.runMain (module.js:676:10)\n    at startup (bootstrap_node.js:187:16)\n    at bootstrap_node.js:608:3","level":"error","timestamp":"2018-02-06T20:53:50.001Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:42.521Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:43.301Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:52.096Z"}
{"message":"Could not get the genres.","stack":"Error: Could not get the genres.\n    at router.get (/Users/moshfeghhamedani/Desktop/node-course/vidly/routes/genres.js:9:9)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:137:13)\n    at Route.dispatch (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/route.js:112:3)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:281:22\n    at Function.process_params (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:335:12)\n    at next (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:275:10)\n    at Function.handle (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:174:3)\n    at router (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:47:12)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express-async-errors/index.js:17:17\n    at Layer.handle [as handle_request] (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/layer.js:95:5)\n    at trim_prefix (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:317:13)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/express/lib/router/index.js:284:7","level":"error","timestamp":"2018-02-06T21:21:53.806Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:34:26.743Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-06T21:39:24.124Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T19:46:38.839Z"}
{"level":"info","message":"Connected to MongoDB...","timestamp":"2018-02-13T19:46:38.861Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:02:31.852Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-02-13T20:02:31.873Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:03:10.196Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:03:10.216Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:27:25.716Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:30:04.955Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:30:04.977Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:30:12.297Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:30:12.356Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:50:37.433Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:50:37.450Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:55:18.295Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:55:18.310Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:57:48.592Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:57:48.597Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T20:58:08.617Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T20:58:08.623Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:01:29.080Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:01:29.085Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:01:46.915Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:01:46.921Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:04:39.262Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:04:39.267Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:08:51.311Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:08:51.317Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:11:41.903Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:11:41.913Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:15:14.584Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:15:14.588Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:15:27.986Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:15:28.051Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:17:59.584Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:17:59.592Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:18:09.265Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:18:09.269Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:20:18.021Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:20:18.026Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T21:22:17.529Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T21:22:17.534Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:15:14.480Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:15:14.614Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:15:24.614Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:15:24.740Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:22:34.000Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:22:34.003Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:28:51.373Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:28:51.378Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:30:02.471Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:30:02.539Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:31:10.953Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:31:11.014Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:32:52.901Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:32:52.972Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:38:34.984Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:38:34.989Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1485:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-13T22:38:35.007Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:41:31.495Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:41:31.500Z"}
{"level":"error","timestamp":"2018-02-13T22:41:31.519Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:42:08.746Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:42:08.811Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:42:43.824Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:42:43.898Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:48:49.381Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:48:49.388Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:49:48.617Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:49:48.624Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:50:06.896Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:50:06.900Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOne (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1485:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-13T22:50:07.017Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-13T22:51:15.433Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-13T22:51:15.439Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:22:20.952Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:22:21.029Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:28:10.502Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:28:10.583Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:31:03.528Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:31:03.591Z"}
{"message":"Genre validation failed: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).","errors":{"name":{"message":"Path `name` (`1234`) is shorter than the minimum allowed length (5).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is shorter than the minimum allowed length (5).","type":"minlength","minlength":5,"path":"name","value":"1234"},"kind":"minlength","path":"name","value":"1234","$isValidatorError":true}},"_message":"Genre validation failed","stack":"ValidationError: name: Path `name` (`1234`) is shorter than the minimum allowed length (5).\n    at new ValidationError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/validation.js:27:11)\n    at model.Object.<anonymous>.Document.invalidate (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/document.js:1656:32)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/document.js:1528:17\n    at Immediate._onImmediate (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:785:9)\n    at runCallback (timers.js:789:20)\n    at tryOnImmediate (timers.js:751:5)\n    at processImmediate [as _immediateCallback] (timers.js:722:5)","name":"ValidationError","level":"error","timestamp":"2018-02-14T17:31:03.618Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:33:25.843Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:33:25.905Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:38:31.430Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:38:31.487Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:42:06.227Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:42:06.294Z"}
{"message":"Genre validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","errors":{"name":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa","$isValidatorError":true}},"_message":"Genre validation failed","stack":"ValidationError: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at new ValidationError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/validation.js:27:11)\n    at model.Object.<anonymous>.Document.invalidate (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/document.js:1656:32)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/document.js:1528:17\n    at Immediate._onImmediate (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:785:9)\n    at runCallback (timers.js:789:20)\n    at tryOnImmediate (timers.js:751:5)\n    at processImmediate [as _immediateCallback] (timers.js:722:5)","name":"ValidationError","level":"error","timestamp":"2018-02-14T17:42:06.358Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:42:53.311Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:42:53.316Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:45:14.385Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:45:14.390Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T17:46:33.000Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T17:46:33.005Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:00:20.704Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:00:20.708Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:05:29.238Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:05:29.245Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:12:37.370Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:12:37.422Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:33:38.432Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:33:38.435Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:38:42.257Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:38:42.262Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:40:30.650Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:40:30.719Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:40:31.020Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:44:44.788Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:44:44.856Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:44:57.875Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:44:57.949Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:44:58.243Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:44:58.326Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:45:17.580Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:45:17.667Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:45:17.876Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:45:18.077Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:46:24.885Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:46:25.022Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:46:25.026Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:46:25.029Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:47:10.061Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:47:10.071Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:47:10.216Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:47:10.220Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:47:52.517Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:47:52.637Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:47:52.776Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:47:52.780Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:49:21.585Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:49:21.590Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:49:21.814Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:49:21.821Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:57:41.031Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:57:41.036Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T18:57:41.196Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T18:57:41.202Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:02:21.299Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:02:21.303Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:02:21.518Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:02:21.524Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:04:09.454Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:04:09.459Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:04:09.622Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:04:09.628Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:05:09.631Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:05:09.637Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:05:09.801Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:05:09.886Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:18:37.168Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:18:37.196Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:18:37.446Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:18:37.501Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:20:25.615Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:20:25.620Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:20:25.916Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:20:25.945Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:20:35.983Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:20:36.012Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:20:36.279Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:20:36.335Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:36:04.887Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:36:04.892Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:36:05.094Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:36:05.147Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:48:34.498Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:48:34.503Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:48:34.702Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:48:34.767Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:49:57.931Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:49:57.936Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:49:58.154Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:49:58.220Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:50:06.267Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:50:06.272Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:50:06.468Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:50:06.475Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:50:13.734Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:50:13.739Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:50:13.952Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:50:13.958Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:51:17.730Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:51:17.735Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:51:17.943Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:51:17.949Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:51:37.064Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:51:37.069Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:51:37.273Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:51:37.279Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:11.237Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:11.241Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:11.450Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:11.457Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:20.439Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:20.443Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:20.782Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:20.799Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:26.093Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:26.117Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:26.344Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:26.392Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:55.450Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:55.455Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:52:55.677Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:52:55.743Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:55:35.033Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:55:35.037Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:55:35.285Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:55:35.362Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:00.677Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:00.756Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOneAndRemove (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:2241:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-14T19:56:00.816Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:00.973Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:00.979Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:31.752Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:31.756Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOneAndRemove (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:2241:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-14T19:56:31.816Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:31.976Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:31.983Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:46.385Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:46.488Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOneAndRemove (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:2241:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-14T19:56:46.548Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:56:46.692Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:56:46.698Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:57:31.717Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:57:31.722Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:57:31.931Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:57:31.938Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:20.530Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:20.534Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:20.747Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:20.753Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:27.180Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:27.184Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:27.537Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:27.549Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:39.049Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:39.054Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:58:39.250Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:58:39.419Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:59:07.432Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:59:07.470Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T19:59:07.660Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T19:59:07.713Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:01:10.699Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:01:10.732Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:01:11.091Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:01:11.139Z"}
{"message":"Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"","stack":"CastError: Cast to ObjectId failed for value \"1\" at path \"_id\" for model \"Genre\"\n    at new CastError (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/error/cast.js:27:11)\n    at ObjectId.Object.<anonymous>.ObjectId.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:158:13)\n    at ObjectId.Object.<anonymous>.SchemaType.applySetters (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:701:12)\n    at ObjectId.Object.<anonymous>.SchemaType._castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1072:15)\n    at ObjectId.Object.<anonymous>.ObjectId.castForQuery (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schema/objectid.js:198:15)\n    at ObjectId.Object.<anonymous>.SchemaType.castForQueryWrapper (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/schematype.js:1041:15)\n    at cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/cast.js:269:32)\n    at model.Query.Object.<anonymous>.Query.cast (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:3133:12)\n    at model.Query.Object.<anonymous>.Query._castConditions (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:1269:10)\n    at model.Query.Object.<anonymous>.Query._findOneAndUpdate (/Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/mongoose/lib/query.js:2146:8)\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:276:8\n    at /Users/moshfeghhamedani/Desktop/node-course/vidly/node_modules/kareem/index.js:23:7\n    at _combinedTickCallback (internal/process/next_tick.js:131:7)\n    at process._tickCallback (internal/process/next_tick.js:180:9)","name":"CastError","stringValue":"\"1\"","kind":"ObjectId","value":"1","path":"_id","level":"error","timestamp":"2018-02-14T20:01:11.190Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:01:26.742Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:01:26.747Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:01:26.956Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:01:27.027Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:02:04.272Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:02:04.299Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-02-14T20:02:04.579Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly_tests...","timestamp":"2018-02-14T20:02:04.630Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-31T00:45:19.891Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-12-31T00:45:20.951Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-31T00:45:27.854Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-12-31T00:45:28.902Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2018-12-31T00:45:52.159Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2018-12-31T00:45:53.208Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-02T23:21:30.695Z"}
{"level":"info","message":"Connected to mongodb://localhost/vidly...","timestamp":"2019-01-02T23:21:31.856Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:12:42.217Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:12:43.294Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:13:32.841Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:13:33.889Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:15:25.171Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:15:26.248Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:16:31.868Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:16:32.903Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:37:00.456Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:37:01.497Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:37:05.611Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:37:06.692Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:38:05.780Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:38:06.828Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:38:09.462Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:38:10.538Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T19:44:20.859Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T19:44:21.899Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T20:42:39.320Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T20:42:40.399Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T21:03:15.242Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T21:03:16.279Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-04T21:05:11.038Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-04T21:05:12.076Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T10:43:52.644Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T10:43:53.695Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T12:02:03.534Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T12:02:04.577Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T12:02:09.895Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T12:02:10.934Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T12:04:05.835Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T12:04:06.912Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T12:13:19.576Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T12:13:20.635Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T13:17:20.284Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T13:17:21.347Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T13:31:45.006Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T13:31:46.058Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T13:37:17.331Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T13:37:18.408Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T13:37:27.786Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T13:37:28.836Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:01:59.679Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:02:00.718Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:03:06.633Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:03:07.700Z"}
{"message":"joi_1.default.string is not a function","stack":"TypeError: joi_1.default.string is not a function\n    at Object.validateClient [as validate] (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:62:29)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:29:33)\n    at Generator.next (<anonymous>)\n    at E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:7:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:3:12)\n    at router.post (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:27:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2019-01-05T14:06:27.576Z"}
{"message":"joi_1.default.string is not a function","stack":"TypeError: joi_1.default.string is not a function\n    at Object.validateClient [as validate] (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:62:29)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:29:33)\n    at Generator.next (<anonymous>)\n    at E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:7:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:3:12)\n    at router.post (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:27:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2019-01-05T14:07:21.749Z"}
{"message":"joi_1.default.string is not a function","stack":"TypeError: joi_1.default.string is not a function\n    at Object.validateClient [as validate] (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:62:29)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:29:33)\n    at Generator.next (<anonymous>)\n    at E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:7:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:3:12)\n    at router.post (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:27:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2019-01-05T14:08:04.712Z"}
{"message":"joi_1.default.string is not a function","stack":"TypeError: joi_1.default.string is not a function\n    at Object.validateClient [as validate] (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:62:29)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:29:33)\n    at Generator.next (<anonymous>)\n    at E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:7:71\n    at new Promise (<anonymous>)\n    at __awaiter (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:3:12)\n    at router.post (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:27:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express-async-errors\\index.js:17:17\n    at Layer.handle [as handle_request] (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:335:12)\n    at next (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2019-01-05T14:10:28.430Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:10:30.204Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:10:31.243Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:13:30.015Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:13:31.101Z"}
{"message":"Cannot read property 'genSalt' of undefined","stack":"TypeError: Cannot read property 'genSalt' of undefined\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:38:41)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","level":"error","timestamp":"2019-01-05T14:13:32.464Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:14:07.923Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:14:08.990Z"}
{"message":"Cannot read property 'genSalt' of undefined","stack":"TypeError: Cannot read property 'genSalt' of undefined\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:38:41)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","level":"error","timestamp":"2019-01-05T14:14:09.013Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:14:55.577Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:14:56.619Z"}
{"message":"Cannot read property 'genSalt' of undefined","stack":"TypeError: Cannot read property 'genSalt' of undefined\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:38:41)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","level":"error","timestamp":"2019-01-05T14:14:56.863Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:15:55.930Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:15:56.987Z"}
{"message":"Client validation failed: language: Path `language` is required., password: Path `password` (`$2b$10$MCToW7G6f.32iQATF1tpTeiVdt4qtn4L5MIBWFLnUICeRY4fRkEdS`) is longer than the maximum allowed length (50).","errors":{"language":{"message":"Path `language` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"language"},"kind":"required","path":"language","$isValidatorError":true},"password":{"message":"Path `password` (`$2b$10$MCToW7G6f.32iQATF1tpTeiVdt4qtn4L5MIBWFLnUICeRY4fRkEdS`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"password","value":"$2b$10$MCToW7G6f.32iQATF1tpTeiVdt4qtn4L5MIBWFLnUICeRY4fRkEdS"},"kind":"maxlength","path":"password","value":"$2b$10$MCToW7G6f.32iQATF1tpTeiVdt4qtn4L5MIBWFLnUICeRY4fRkEdS","$isValidatorError":true}},"_message":"Client validation failed","stack":"ValidationError: language: Path `language` is required., password: Path `password` (`$2b$10$MCToW7G6f.32iQATF1tpTeiVdt4qtn4L5MIBWFLnUICeRY4fRkEdS`) is longer than the maximum allowed length (50).\n    at new ValidationError (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Document.invalidate (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at processImmediate (timers.js:632:19)\nFrom previous event:\n    at Object.promiseOrCallback (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\utils.js:221:10)\n    at model.Model.save (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\model.js:331:16)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:41:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","name":"ValidationError","__stackCleaned__":true,"level":"error","timestamp":"2019-01-05T14:15:58.428Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:17:21.517Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:17:22.579Z"}
{"message":"Client validation failed: language: Path `language` is required., password: Path `password` (`$2b$10$zXI3mQlA/jd2HXmSXxMB6uOAVnTOR6MzhgGR4id9J/pA6lxH8oroS`) is longer than the maximum allowed length (50).","errors":{"language":{"message":"Path `language` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"language"},"kind":"required","path":"language","$isValidatorError":true},"password":{"message":"Path `password` (`$2b$10$zXI3mQlA/jd2HXmSXxMB6uOAVnTOR6MzhgGR4id9J/pA6lxH8oroS`) is longer than the maximum allowed length (50).","name":"ValidatorError","properties":{"message":"Path `{PATH}` (`{VALUE}`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"password","value":"$2b$10$zXI3mQlA/jd2HXmSXxMB6uOAVnTOR6MzhgGR4id9J/pA6lxH8oroS"},"kind":"maxlength","path":"password","value":"$2b$10$zXI3mQlA/jd2HXmSXxMB6uOAVnTOR6MzhgGR4id9J/pA6lxH8oroS","$isValidatorError":true}},"_message":"Client validation failed","stack":"ValidationError: language: Path `language` is required., password: Path `password` (`$2b$10$zXI3mQlA/jd2HXmSXxMB6uOAVnTOR6MzhgGR4id9J/pA6lxH8oroS`) is longer than the maximum allowed length (50).\n    at new ValidationError (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Document.invalidate (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at processImmediate (timers.js:632:19)\nFrom previous event:\n    at Object.promiseOrCallback (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\utils.js:221:10)\n    at model.Model.save (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\model.js:331:16)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:41:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","name":"ValidationError","__stackCleaned__":true,"level":"error","timestamp":"2019-01-05T14:17:25.300Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:17:50.368Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:17:51.450Z"}
{"message":"Client validation failed: language: Path `language` is required.","errors":{"language":{"message":"Path `language` is required.","name":"ValidatorError","properties":{"message":"Path `{PATH}` is required.","type":"required","path":"language"},"kind":"required","path":"language","$isValidatorError":true}},"_message":"Client validation failed","stack":"ValidationError: language: Path `language` is required.\n    at new ValidationError (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\error\\validation.js:27:11)\n    at model.Document.invalidate (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1656:32)\n    at E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\document.js:1528:17\n    at Immediate.<anonymous> (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\schematype.js:785:9)\n    at processImmediate (timers.js:632:19)\nFrom previous event:\n    at Object.promiseOrCallback (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\utils.js:221:10)\n    at model.Model.save (E:\\MyWork\\seshat\\backend\\node_modules\\mongoose\\lib\\model.js:331:16)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:41:18)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","name":"ValidationError","__stackCleaned__":true,"level":"error","timestamp":"2019-01-05T14:17:54.490Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:18:28.031Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:18:29.089Z"}
{"message":"Cannot read property 'sign' of undefined","stack":"TypeError: Cannot read property 'sign' of undefined\n    at model.exports.ClientSchema.methods.generateAuthToken (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:58:42)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:43:26)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","level":"error","timestamp":"2019-01-05T14:18:30.771Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:19:13.114Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:19:14.176Z"}
{"message":"Cannot read property 'get' of undefined","stack":"TypeError: Cannot read property 'get' of undefined\n    at model.exports.ClientSchema.methods.generateAuthToken (E:\\MyWork\\seshat\\backend\\build\\models\\clients.js:58:87)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:43:26)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)","level":"error","timestamp":"2019-01-05T14:19:36.521Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-05T14:21:38.918Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-05T14:21:39.986Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T14:41:32.400Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T14:41:33.493Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T20:58:23.864Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T20:58:24.890Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T22:09:25.236Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T22:09:26.306Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T22:09:59.852Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T22:10:00.884Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T22:10:03.833Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T22:10:04.859Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T22:11:03.167Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T22:11:04.201Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-07T22:11:08.611Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-07T22:11:09.635Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-08T22:33:48.134Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-08T22:33:49.324Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-08T22:36:20.094Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-08T22:36:21.134Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-08T22:45:58.356Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-08T22:45:59.400Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-08T22:47:16.600Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-08T22:47:17.659Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-11T23:43:12.409Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-11T23:43:15.985Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-11T23:48:37.782Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-11T23:48:38.814Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-11T23:49:37.738Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-11T23:49:38.795Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-11T23:50:33.355Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-11T23:50:34.383Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T21:45:56.459Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T21:45:57.488Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T21:46:12.064Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T21:46:13.120Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T21:48:24.602Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T21:48:25.663Z"}
{"message":"Cannot read property 'password' of null","stack":"TypeError: Cannot read property 'password' of null\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\services\\clientServices.js:27:52)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\services\\clientServices.js:4:58)","level":"error","timestamp":"2019-01-13T21:48:33.480Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T21:51:09.516Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T21:51:10.562Z"}
{"message":"client.save is not a function","stack":"TypeError: client.save is not a function\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\services\\clientServices.js:28:22)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\services\\clientServices.js:4:58)","level":"error","timestamp":"2019-01-13T21:51:13.266Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T21:53:39.177Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T21:53:40.235Z"}
{"message":"Cannot set headers after they are sent to the client","stack":"Error [ERR_HTTP_HEADERS_SENT]: Cannot set headers after they are sent to the client\n    at ServerResponse.setHeader (_http_outgoing.js:482:11)\n    at ServerResponse.header (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\response.js:767:10)\n    at ServerResponse.send (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\response.js:170:12)\n    at ServerResponse.json (E:\\MyWork\\seshat\\backend\\node_modules\\express\\lib\\response.js:267:15)\n    at Object.<anonymous> (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:25:20)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\routes\\clients.js:4:58)\n    at process.internalTickCallback (internal/process/next_tick.js:77:7)","level":"error","timestamp":"2019-01-13T21:53:42.972Z"}
{"message":"Client already registered.","stack":"Error: Client already registered.\n    at E:\\MyWork\\seshat\\backend\\build\\controllers\\clientController.js:30:19\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\MyWork\\seshat\\backend\\build\\controllers\\clientController.js:4:58)\n    at process.internalTickCallback (internal/process/next_tick.js:77:7)","level":"error","timestamp":"2019-01-13T21:54:01.146Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-13T22:11:49.672Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-13T22:11:50.703Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T13:10:13.275Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T13:10:14.468Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T13:11:03.752Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T13:11:04.789Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:21:36.915Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:21:38.023Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:46:15.505Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:46:16.536Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:49:39.262Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:49:40.302Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:54:07.860Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:54:08.984Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:54:14.130Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:54:15.172Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:57:09.345Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:57:10.379Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:57:13.041Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:57:14.071Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T19:58:56.686Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T19:58:57.710Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T20:00:30.824Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T20:00:31.869Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T20:02:58.527Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T20:02:59.557Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T20:28:49.044Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T20:28:50.109Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T20:28:53.787Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T20:28:54.859Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:00:46.384Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:00:47.414Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:01:11.469Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:01:12.502Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:20:19.016Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:20:20.050Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:20:40.144Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:20:41.194Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:29:51.598Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:29:52.627Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:40:34.823Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:40:35.851Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:45:06.004Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:45:07.081Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:45:25.992Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:45:27.023Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:53:39.021Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:53:40.049Z"}
{"level":"info","message":"Listening on port 3000...","timestamp":"2019-01-14T21:56:42.574Z"}
{"level":"info","message":"Connected to mongodb://localhost/seshat...","timestamp":"2019-01-14T21:56:43.600Z"}
